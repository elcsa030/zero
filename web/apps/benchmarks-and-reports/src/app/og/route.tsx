import { ImageResponse } from "next/og";

export const runtime = "edge";

export async function GET(request: Request) {
  const fontData = await fetch(new URL("../../../public/fonts/EuropaGroteskSH-Med.otf", import.meta.url)).then((res) =>
    res.arrayBuffer(),
  );

  try {
    const { searchParams } = new URL(request.url);
    const hasTitle = searchParams.has("title");
    const title = hasTitle ? searchParams.get("title")?.slice(0, 100) : "Universal Zero Knowledge";

    return new ImageResponse(
      <div
        style={{
          backgroundColor: "#fdff9d",
          height: "100%",
          width: "100%",
          display: "flex",
          justifyContent: "center",
          flexDirection: "column",
          paddingLeft: 48,
        }}
      >
        <svg
          // @ts-expect-error `tw` is valid
          tw="absolute top-12 left-12 w-[128px] h-[93px]"
          id="Layer_2"
          data-name="Layer 2"
          xmlns="http://www.w3.org/2000/svg"
          version="1.1"
          viewBox="0 0 191.95 139.2"
        >
          <path d="M3.29 51.38c2.12 0 3.26-.55 3.21-2.94-.11-4.89-.04-9.79-.02-14.69 0-.71-.23-1.54.55-2.04 1.57-1.01 6.26.15 7.28 1.81 2.44 3.94 4.87 7.9 7.31 11.85 1.05 1.69 2.07 3.4 3.22 5.02.74 1.04 4.6 1.46 5.56.62 1.66-1.46 0-2.58-.62-3.64-2.85-4.76-5.81-9.46-8.74-14.18-.59-.96-1.07-1.87.56-2.18 7.23-1.36 10.25-6.28 10.7-13.05C32.99 7.7 28.56.85 17.6.85 12.7.85 7.8.91 2.9.82.84.78.16 1.55.18 3.6c.09 7.47.04 14.94.04 22.41 0 7.47.08 14.94-.04 22.41-.04 2.39.97 2.98 3.12 2.97Zm3.2-43.05c0-.81-.08-1.84 1.14-1.8 4.54.15 9.1-.55 13.62.47 2.26.51 3.68 1.87 4.34 3.99 1.1 3.48 1.07 7.01-.01 10.5-.71 2.29-2.35 3.55-4.67 3.9-4.29.64-8.6.25-12.91.34-1.25.03-1.53-.68-1.52-1.74.02-2.65 0-5.3 0-7.95 0-2.57-.02-5.13 0-7.7ZM129.21 117.58c.23-.09.44-.24.66-.34 5.5-2.57 8.03-7.78 7.52-15.44-.61-9.06-5.47-13.74-14.53-13.88-4.82-.07-9.63.06-14.45-.05-2.25-.05-3.07.73-3.03 3.04.12 7.38.04 14.77.04 22.16 0 7.47.08 14.94-.04 22.41-.04 2.36.86 2.98 3.07 2.99 2.21 0 3.16-.62 3.09-2.97-.13-4.81-.05-9.63-.02-14.44 0-.79-.23-1.72.63-2.26 1.64-1.03 6.18.17 7.24 1.88 3.1 5 6.33 9.93 9.22 15.04 1.27 2.24 2.81 2.92 5.21 2.72 2.59-.22 3.01-.81 1.66-2.99-2.6-4.24-5.25-8.45-7.85-12.69-.77-1.26-2.28-2.54-1.97-3.83.27-1.1 2.32-.87 3.54-1.33Zm-4.74-4.82c-3.72.26-7.47.08-11.21.15-1.53.03-1.76-.88-1.75-2.09.02-2.57 0-5.15 0-7.72 0-2.49.01-4.98 0-7.47 0-1.14.29-1.96 1.66-1.93 4.07.1 8.14-.29 12.2.25 3.04.41 4.94 2.06 5.64 5.13.58 2.56.71 5.1.17 7.65-.86 4.14-2.47 5.73-6.71 6.03ZM191.65 102.11c-.2-6.76-4.25-12.13-10.16-13.97-2.8-.87-5.72-1.06-8.63-.84-7.48.56-11.93 4.18-13.9 11.4-1.29 4.73-.42 9.6-.68 13.61 0 3.61-.01 6.44 0 9.26.04 10.45 3.75 15.67 13.83 17.31 10.01 1.63 18.39-2.61 19.46-14.59.66-7.33.29-14.78.08-22.17Zm-6.19 22.28c-.55 5.96-3.72 8.78-9.81 9.07-6.47.31-9.92-2.19-11.08-8.17-.78-4.03-.31-8.11-.47-12.17.19-4.38-.29-8.79.65-13.15.82-3.84 3.36-6.3 7.26-6.76.33-.04.66-.08.99-.11 8.84-.72 12.59 2.54 12.68 11.37.07 6.64.4 13.29-.21 19.91ZM126.85 23.94c-3.73-1.36-7.69-2.14-11.22-4.04-4.7-2.52-5.71-9.52-1.66-12.3 3.94-2.7 8.38-2.48 12.67-.88 3.68 1.38 4.71 4.61 4.97 8.21.17 2.27 1.14 2.76 4.13 2.43 2-.22 2.08-1.47 1.91-3.03C136.62 4.99 130.96.08 120.78.06c-1.91-.24-4.09.3-6.25.96-7.91 2.43-11.44 10.82-7.72 18.23 2.11 4.19 5.92 6.09 10.03 7.62 3.81 1.42 7.85 2.17 11.48 4.06 3.2 1.66 4.67 4.34 4.45 7.95-.21 3.52-2.17 5.73-5.41 6.67-3.74 1.09-7.59 1.02-11.31-.06-2.81-.81-4.67-2.78-5.23-5.78-.2-1.06-.44-2.11-.53-3.18-.21-2.59-2.18-1.7-3.59-1.84-1.46-.14-2.35.38-2.38 2.07-.12 6.35 3.66 11.9 9.67 13.97 4.78 1.65 9.66 1.73 14.49.43 8.5-2.29 12.64-10.67 9.33-18.54-2.07-4.91-6.36-7-10.96-8.68ZM61.96 93.65c6.48.08 12.96-.01 19.44.05 2.16.02 3.46-.41 3.41-3-.04-2.43-1.19-2.85-3.28-2.83-8.31.08-16.61.11-24.92-.01-2.47-.04-3.17.89-3.13 3.22.1 7.39.04 14.78.04 22.16s.06 14.78-.04 22.16c-.03 2.29.81 3.05 3.07 3.03 8.39-.09 16.78-.09 25.17 0 2.25.02 3.11-.74 3.1-3.03 0-2.3-1.08-2.77-3.09-2.75-6.64.07-13.29-.02-19.93.06-1.76.02-2.31-.56-2.27-2.29.1-4.07.1-8.14 0-12.2-.05-1.75.55-2.32 2.28-2.29 4.73.09 9.47-.03 14.2.05 2.19.04 3.16-.67 3.12-3.02-.04-2.21-.95-2.88-3.03-2.83-4.65.1-9.3-.03-13.95.06-1.81.03-2.73-.31-2.63-2.45.18-3.89.14-7.8.01-11.7-.06-1.9.64-2.42 2.45-2.4ZM158.39 25.98c0 3.65-.12 7.31.03 10.95.29 7.08 4.4 13.86 13.96 14.92 11.37 1.25 19.54-5.53 19.37-16.57-.01-.89.15-1.79-1.09-2.18-3.06-.96-4.76.05-5.07 3.17-.07.66-.11 1.33-.21 1.98-.74 4.73-3.54 7.37-8.3 7.75-1.4.11-2.82.11-4.23.02-4.68-.31-7.43-2.55-8.1-7.24-1.18-8.24-.83-16.55-.21-24.82.18-2.45 1.05-4.76 3.18-6.23 3.89-2.68 8.18-2.57 12.4-1.1 3.77 1.31 4.99 4.58 5.38 8.25.08.74.14 1.49.22 2.23.31 2.66 2.39 1.67 3.87 1.82 1.56.16 2.22-.57 2.17-2.2-.19-7.39-3.67-14.42-11.64-16.19-2.74-.61-5.45-.59-8.16-.39-6.3.47-11 4.5-12.8 10.5-1.52 5.06-.56 10.23-.79 15.35ZM31.26 132.7c-6.98.11-13.97.06-20.95.01-.84 0-2.02.53-2.47-.48-.33-.77.57-1.48 1.02-2.15 7.79-11.56 15.56-23.14 23.43-34.65 1.17-1.72 1.44-3.45 1.36-5.4-.06-1.4-.62-2.14-2.12-2.14-9.23.02-18.46 0-27.69 0-.87 0-1.66.13-2.07 1.05-1.18 2.65.15 4.72 3.06 4.73 6.48.01 12.97 0 19.45.02.62 0 1.43-.23 1.76.55.26.63-.33 1.06-.64 1.53-4.03 5.99-8.07 11.97-12.12 17.95-4.14 6.12-8.29 12.24-12.44 18.35-1.19 1.75-.99 3.79-.39 5.49.49 1.41 2.36.79 3.63.81 4.32.06 8.65.02 12.97.02 4.74 0 9.48-.06 14.22.02 2.01.03 2.84-.69 2.84-2.76 0-2.08-.62-2.99-2.86-2.95ZM74.61 6.44c2.65.17 5.32-.06 7.97.07 2.16.1 2.42-1.04 2.39-2.79-.03-1.67-.15-2.91-2.35-2.89-9.05.06-18.11.06-27.16 0-2.25-.01-2.24 1.36-2.27 2.97-.03 1.62.21 2.77 2.25 2.7 2.82-.09 5.65.05 8.47-.05 1.66-.06 2.16.6 2.15 2.18-.04 11.62-.04 23.24 0 34.87 0 1.66-.68 2.18-2.24 2.14-2.74-.06-5.48.05-8.22-.03-1.86-.05-2.49.76-2.42 2.55.06 1.7.05 3.19 2.39 3.18 9.05-.03 18.11-.04 27.16 0 2.27 0 2.18-1.46 2.22-3.03.05-1.63-.21-2.77-2.24-2.7-2.57.08-5.16-.13-7.72.05-2.37.17-2.97-.77-2.91-3.01.14-5.56.05-11.12.05-16.69 0-5.65.05-11.29-.03-16.93-.03-1.87.44-2.73 2.51-2.6Z" />
        </svg>

        <div tw="text-[100px] text-black max-w-[80%]">{title}</div>
      </div>,
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: "Europa",
            data: fontData,
            style: "normal",
          },
        ],
      },
    );
  } catch (error: any) {
    console.error(`${error.message}`);

    return new Response("Failed to generate the image", {
      status: 500,
    });
  }
}
