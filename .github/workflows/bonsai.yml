name: bonsai

on:
  push:
    branches: [ main, 'release-*' ]
  pull_request:
    branches: [ main, 'release-*' ]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  bonsai:
    runs-on: [self-hosted, prod, Linux, cpu]
    steps:
      - name: Check for changes in 'bonsai' directory
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            bonsai:
              - 'bonsai/**'
      - name: checkout dummy commit (submodule bug workaround)
        if: steps.filter.outputs.bonsai == 'true'
        run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
      - name: checkout code
        if: steps.filter.outputs.bonsai == 'true'
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: install rust
        if: steps.filter.outputs.bonsai == 'true'
        uses: ./.github/actions/rustup
      - name: Install Foundry
        if: steps.filter.outputs.bonsai == 'true'
        uses: risc0/foundry-toolchain@2fe7e70b520f62368a0e3c464f997df07ede420f
      - name: check solidity code formatting in bonsai/ethereum
        if: steps.filter.outputs.bonsai == 'true'
        run: forge fmt --check
        working-directory: bonsai/ethereum
      - name: check solidity code formatting in bonsai/examples/governance
        if: steps.filter.outputs.bonsai == 'true'
        run: forge fmt --check
        working-directory: bonsai/examples/governance
      - name: run cargo tests in bonsai
        if: steps.filter.outputs.bonsai == 'true'
        run: cargo test --manifest-path bonsai/Cargo.toml
      - name: run cargo tests in bonsai/examples/governance
        if: steps.filter.outputs.bonsai == 'true'
        run: cargo test --manifest-path bonsai/examples/governance/Cargo.toml
      - name: run forge tests in bonsai/ethereum
        if: steps.filter.outputs.bonsai == 'true'
        run: forge test -vvv
        working-directory: bonsai/ethereum
      - name: run forge tests without the zkVM in bonsai/examples/governance
        if: steps.filter.outputs.bonsai == 'true'
        env:
          TEST_USE_ZKVM: false
        run: forge test -vvv
        working-directory: bonsai/examples/governance
      - name: run forge tests with the zkvm in bonsai/examples/governance
        if: steps.filter.outputs.bonsai == 'true'
        env:
          TEST_USE_ZKVM: true
        run: forge test -vvv
        working-directory: bonsai/examples/governance