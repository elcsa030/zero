name: Benchmark Check

on:
  pull_request:
    branches:
      - 'morgan/benchmarks-comments-fix'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# this is needed to gain access via OIDC to the S3 bucket for caching
permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RISC0_BUILD_LOCKED: 1
  RISC0_TOOLCHAIN_VERSION: v2024-01-31.1

jobs:
  bench:
    runs-on: [self-hosted, prod, bench, "${{ matrix.os }}", "${{ matrix.device }}"]

    strategy:
      fail-fast: false
      matrix:
        os: [Linux, macOS]
        feature: [default]
        device: [cpu]
        include:
          - os: Linux
            feature: cuda
            device: nvidia_rtx_a5000

    env:
      FEATURE: ${{ matrix.feature }}

    steps:
      # This is a workaround from: https://github.com/actions/checkout/issues/590#issuecomment-970586842
      - run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
      - uses: actions/checkout@v4
      - if: matrix.feature == 'cuda'
        uses: ./.github/actions/cuda
      - uses: ./.github/actions/rustup
      - uses: ./.github/actions/sccache
        with:
          key: ${{ matrix.os }}-${{ matrix.feature }}
      - run: cargo run --bin cargo-risczero --no-default-features -- risczero install --version $RISC0_TOOLCHAIN_VERSION
      - uses: risc0/criterion-compare-action@risc0
        id: criterion-cmp
        with:
          benchName: fib
          branchName: main
          features: ${{ matrix.feature }}
          prettyName: "${{ matrix.os }}-${{ matrix.feature }}"
          outputMarkdown: true

      - name: Create output dir
        run: |
          mkdir -p ${{ runner.temp }}/pr-output/
          echo ${{ github.event.number }} > ${{ runner.temp }}/pr-output/NR

      - name: Write compare markdown to file
        run: |
          echo "${{ steps.criterion-cmp.outputs.markdown }}" > ${{ runner.temp }}/pr-output/${{ matrix.os }}-${{ matrix.feature }}-output.md

      - uses: actions/upload-artifact@v3
        with:
          name: 'md-output'
          path: ${{ runner.temp }}/pr-output/
          if-no-files-found: error

      # Note: we just push the comment data into artifacts, here
      # the bench_pr_comment.yml picks up after this workflow to make the comment
      # needed because: https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

  comment:
    runs-on: [self-hosted, prod, bench, "${{ matrix.os }}", "${{ matrix.device }}"]
    steps:  
      - name: unzip benchmark markdown files
        run: |
          mkdir -p ${{ runner.temp }}/pr-output/
          unzip -o ${{ runner.temp }}/md-output.zip -d ${{ runner.temp }}/pr-output/

      - name: Merge output files
        shell: bash
        run: sed h ${{ runner.temp }}/pr-output/*-output.md > ${{ runner.temp }}/pr-output/merged.md
        id: download

      - name: Append merged output file to collapse all details
        shell: bash
        run: |
          echo "<details>
          <summary>Click Here for Benchmark Results for Run ${{github.run_id}}</summary>
          
          $(cat ${{ runner.temp }}/pr-output/merged.md)" > ${{ runner.temp }}/pr-output/merged.md
          echo "" >> ${{ runner.temp }}/pr-output/merged.md
          echo "</details>" >> ${{ runner.temp }}/pr-output/merged.md

      - uses: actions/github-script@v3
        name: Create PR comment
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            var fs = require('fs');
            var body = fs.readFileSync("${{ runner.temp }}/pr-output/merged.md", 'utf8');
            var issue_number = Number(fs.readFileSync("${{ runner.temp }}/pr-output/NR"));
            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })