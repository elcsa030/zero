name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch the merge commit and origin/HEAD.
          fetch-depth: 2
      - uses: risc0/actions-rs-toolchain@v1
        with:
          toolchain: stable
      - name: Install cargo-sort
        uses: risc0/cargo-install@v1
        with:
          crate: cargo-sort
          version: "1.0"
      - run: cargo fmt --all -- --check
      - run: cargo sort --workspace --check
      - run: npx @kt3k/license-checker

  test:
    runs-on: [self-hosted, "${{ matrix.os }}", "${{ matrix.device }}"]
    strategy:
      fail-fast: false
      matrix:
        os: [Linux, macOS]
        feature: [default]
        device: [cpu]
        include:
          - os: Linux
            feature: cuda
            device: nvidia_rtx_a5000
          - os: macOS
            feature: metal
            device: intel_uhd_630
    env:
      FEATURE: ${{ matrix.feature }}
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_URL: https://github.com/mozilla/sccache/releases/download
      SCCACHE_VERSION: v0.3.3
    steps:
      - uses: actions/checkout@v3
      - uses: risc0/actions-rs-toolchain@v1
        with:
          toolchain: stable
      - name: Prepare environment (Linux)
        if: matrix.os == 'Linux'
        run: |
          echo "SCCACHE_ARCH=x86_64-unknown-linux-musl" >> $GITHUB_ENV
      - name: Prepare environment (macOS)
        if: matrix.os == 'macOS'
        run: |
          echo "SCCACHE_ARCH=x86_64-apple-darwin" >> $GITHUB_ENV
      - name: Install sccache
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-$SCCACHE_ARCH
          curl -L "$SCCACHE_URL/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mkdir -p $HOME/.local/bin
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - run: cargo test -F $FEATURE
      - run: cargo test -F $FEATURE --tests -- --ignored
      - run: cargo test -F $FEATURE --manifest-path examples/Cargo.toml
      - run: cargo build --manifest-path risc0/wasm/Cargo.toml --target wasm32-unknown-unknown
        if: matrix.device == 'cpu'
      - run: cargo check -F $FEATURE --benches
      - run: cargo check -p bootstrap
        if: matrix.device == 'cpu'
      - run: cargo check -p risc0-build
        if: matrix.device == 'cpu'
      - run: cargo check -F $FEATURE -p risc0-circuit-rv32im
      - run: cargo check -p risc0-core
        if: matrix.device == 'cpu'
      - run: cargo check -F $FEATURE -p risc0-r0vm
      - run: cargo check -F $FEATURE -p risc0-sys
      - run: cargo check -F $FEATURE -p risc0-zkp
      - run: cargo check -F $FEATURE -p risc0-zkvm
      - run: sccache --show-stats

  doc:
    runs-on: [self-hosted, Linux, cpu]
    steps:
      - uses: actions/checkout@v3
      - uses: risc0/actions-rs-toolchain@v1
        with:
          toolchain: stable
      - run: cargo doc
