name: risc0-ethereum CI

on:
  merge_group:
  pull_request:
    branches: [main, "release-*"]
  workflow_dispatch:
    inputs:
      risc0-ethereum-branch:
        description: "risc0-ethereum branch to checkout"
        required: false
        default: 'main'
      bonsai-foundry-template-branch:
        description: "bonsai-foundry-template branch to checkout"
        required: false
        default: 'main'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# this is needed to gain access via OIDC to the S3 bucket for caching
permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RISC0_TOOLCHAIN_VERSION: v2024-01-31.1

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      test: ${{ steps.filter.outputs.test }}
    steps:
      - uses: actions/checkout@v4
      - uses: risc0/paths-filter@4067d885736b84de7c414f582ac45897079b0a78
        id: filter
        with:
          filters: |
            base: &base
              - .github/actions/**
              - .github/workflows/risc0-ethereum.yml
              - Cargo.toml
              - rust-toolchain.toml
              - Cargo.lock
            test:
              - *base
              - bonsai/**
              - risc0/**

  # see: https://github.com/orgs/community/discussions/26822
  main-status-check:
    if: always()
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Check all job status
        # see https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
        # see https://stackoverflow.com/a/67532120/4907315
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1

  test:
    if: ${{ needs.changes.outputs.test == 'true' || github.event_name == 'workflow_dispatch'}}
    needs: changes
    runs-on: [self-hosted, prod, "${{ matrix.os }}", "${{ matrix.device }}"]
    strategy:
      fail-fast: false
      matrix:
        os: [Linux]
        feature: [default]
        device: [cpu]
    env:
      FEATURE: ${{ matrix.feature }}
      RISC0_BUILD_LOCKED: 1
      RUST_BACKTRACE: full
    steps:
      # This is a workaround from: https://github.com/actions/checkout/issues/590#issuecomment-970586842
      - run: "git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || :"
      - uses: actions/checkout@v4
        with:
          path: 'risc0'
      - uses: ./risc0/.github/actions/rustup
      - uses: ./risc0/.github/actions/sccache
        with:
          key: ${{ matrix.os }}-${{ matrix.feature }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3'
      - name: Install python dependencies
        run: python -m pip install --upgrade toml
      - name: Install risczero toolchain
        run: cargo run --bin cargo-risczero --no-default-features -- risczero install --version $RISC0_TOOLCHAIN_VERSION
        working-directory: risc0
      - uses: risc0/foundry-toolchain@2fe7e70b520f62368a0e3c464f997df07ede420f
        with:
          version: nightly-09fe3e041369a816365a020f715ad6f94dbce9f2
      - name: Checkout risc0-ethereum
        uses: actions/checkout@v4
        with:
          repository: 'risc0/risc0-ethereum'
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
          path: 'risc0-ethereum'
          ref: ${{ github.event.inputs.risc0-ethereum-branch || 'capossele/risc0-CI' }}
      - name: override Cargo.toml on risc0-ethereum
        run: python ../risc0/.github/local_override.py Cargo.toml
        working-directory: risc0-ethereum
      - name: build risc0-ethereum
        run: cargo test --workspace --no-run
        working-directory: risc0-ethereum
      - name: test risc0-ethereum
        run: cargo test --workspace
        working-directory: risc0-ethereum
      - name: forge test on risc0-ethereum
        run: forge test -vvv
        working-directory: risc0-ethereum/contracts
      - name: Checkout foundry-template
        uses: actions/checkout@v4
        with:
          repository: 'risc0/bonsai-foundry-template'
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
          path: 'bonsai-foundry-template'
          ref: ${{ github.event.inputs.bonsai-foundry-template-branch || 'main' }}
      - name: override Cargo.toml on bonsai-foundry-template
        run: python ../risc0/.github/local_override.py Cargo.toml
        working-directory: bonsai-foundry-template
      - name: override Cargo.toml guest on bonsai-foundry-template
        run: python ../risc0/.github/local_override.py methods/guest/Cargo.toml
        working-directory: bonsai-foundry-template
      - name: build bonsai-foundry-template
        run: cargo build
        working-directory: bonsai-foundry-template
      - name: build bonsai-foundry-template contracts
        run: forge build
        working-directory: bonsai-foundry-template
      - name: run foundry tests in dev mode
        env:
            RISC0_DEV_MODE: true
        run: forge test -vvv
        working-directory: bonsai-foundry-template
      - run: sccache --show-stats
