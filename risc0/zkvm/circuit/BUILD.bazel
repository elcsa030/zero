load("//bazel/rules/cc:defs.bzl", "cc_library")
load("//risc0/zkvm/circuit/make-circuit:defs.bzl", "make_circuit")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "circuit",
    srcs = [
        "accum_regs.cpp",
        "compute_cycle.cpp",
        "context.cpp",
        "data_regs.cpp",
        "decode_cycle.cpp",
        "divide_cycle.cpp",
        "final_cycle.cpp",
        "gen_context.cpp",
        "make_circuit.cpp",
        "mem_check.cpp",
        "mem_io_regs.cpp",
        "multiply_cycle.cpp",
        "poly_context.cpp",
        "sha_cycle.cpp",
        "step_state.cpp",
    ],
    hdrs = [
        "accum_regs.h",
        "code_regs.h",
        "compute_cycle.h",
        "constants.h",
        "context.h",
        "cycle.h",
        "data_regs.h",
        "decode_cycle.h",
        "divide_cycle.h",
        "edsl.h",
        "final_cycle.h",
        "gen_context.h",
        "make_circuit.h",
        "mem_check.h",
        "mem_io_regs.h",
        "multiply_cycle.h",
        "poly_context.h",
        "riscv32im.inl",
        "sha_cycle.h",
        "step_state.h",
        "types.h",
    ],
    deps = [
        "//risc0/zkp/core",
        "//risc0/zkvm/platform",
    ],
)

cc_library(
    name = "inc",
    hdrs = ["constants.h"],
    deps = ["//risc0/zkvm/platform"],
)

make_circuit(
    name = "step_inc_gen",
    out = "step.cpp.inc",
)
